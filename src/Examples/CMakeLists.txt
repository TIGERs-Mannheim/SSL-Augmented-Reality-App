cmake_minimum_required(VERSION 2.8)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
project( Examples )
find_package( OpenCV REQUIRED )

include(FindProtobuf)
find_package( Protobuf REQUIRED )
include_directories(${PROTOBUF_INCLUDE_DIR})
include_directories(${CMAKE_CURRENT_BINARY_DIR})
PROTOBUF_GENERATE_CPP(PROTO_SRCS PROTO_HDRS augm_wrapper.proto)

add_executable( HoughLines HoughLines_Demo.cpp )
add_executable( HoughCircle HoughCircle_Demo.cpp )
add_executable( CannyDetector CannyDetector_Demo.cpp )
add_executable( SURF_Homography SURF_Homography.cpp )
add_executable( MatchTemplate MatchTemplate_Demo.cpp )
add_executable( findContours_demo findContours_demo.cpp )
add_executable( cannyContoursEllipse cannyContoursEllipse.cpp )
add_executable( colorDetection colorDetection.cpp )
add_executable( houghlines houghlines.cpp LSWMS.cpp)
add_executable( colorAreas colorAreas.cpp ${PROTO_SRCS} ${PROTO_HDRS} )
add_executable( reduceImage reduceImage.cpp )
target_link_libraries( HoughLines ${OpenCV_LIBS} )
target_link_libraries( HoughCircle ${OpenCV_LIBS} )
target_link_libraries( CannyDetector ${OpenCV_LIBS} )
target_link_libraries( SURF_Homography ${OpenCV_LIBS} )
target_link_libraries( MatchTemplate ${OpenCV_LIBS} )
target_link_libraries( findContours_demo ${OpenCV_LIBS} )
target_link_libraries( cannyContoursEllipse ${OpenCV_LIBS} )
target_link_libraries( colorDetection ${OpenCV_LIBS} )
target_link_libraries( houghlines ${OpenCV_LIBS})
target_link_libraries( colorAreas ${OpenCV_LIBS} ${PROTOBUF_LIBRARY} )
target_link_libraries( reduceImage ${OpenCV_LIBS})
